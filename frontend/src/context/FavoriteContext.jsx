import React, { createContext, useContext, useEffect, useState } from 'react';
import axios from 'axios';
import { getCurrentUser, getToken } from '../utils/auth';

const FavoriteContext = createContext();
export const useFavorites = () => useContext(FavoriteContext);

export const FavoriteProvider = ({ children }) => {
    const [favorites, setFavorites] = useState([]);
    const [user, setUser] = useState(null);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–∫–µ–Ω–∞
    useEffect(() => {
        const u = getCurrentUser();
        if (u && u.id) {
            setUser(u);
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', u);
        } else {
            console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (—Ç–æ–∫–µ–Ω –ø–æ–≤—Ä–µ–∂–¥—ë–Ω –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)');
        }
    }, []);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
    useEffect(() => {
        if (user?.id) {
            const loadFavorites = async () => {
                try {
                    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –¥–ª—è user_id:', user.id);
                    const res = await axios.get(`http://localhost:5000/api/favorites/${user.id}`, {
                        headers: { Authorization: `Bearer ${getToken()}` }
                    });
                    setFavorites(res.data);
                    console.log('‚úÖ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–æ:', res.data);
                } catch (err) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', err);
                }
            };
            loadFavorites();
        }
    }, [user]);

    const toggleFavorite = async (productId) => {
        console.log('üü° –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ, —Ç–æ–≤–∞—Ä:', productId);
        if (!user?.id) {
            console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
            return;
        }

        try {
            const res = await axios.post(
                'http://localhost:5000/api/favorites',
                { product_id: productId },
                {
                    headers: {
                        Authorization: `Bearer ${getToken()}`
                    }
                }
            );

            console.log('üì© –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', res.data);

            setFavorites((prev) =>
                res.data.status === 'added'
                    ? [...prev, productId]
                    : prev.filter((id) => id !== productId)
            );
        } catch (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', err);
        }
    };

    return (
        <FavoriteContext.Provider value={{ favorites, toggleFavorite }}>
            {children}
        </FavoriteContext.Provider>
    );
};
