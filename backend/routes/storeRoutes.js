const express = require('express');
const router = express.Router();
const pool = require('../config/db');

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã
router.get('/', async (req, res) => {
    try {
        const result = await pool.query('SELECT * FROM stores');
        res.json(result.rows);
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤:', err);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
});

// üîç –ü–æ–ª—É—á–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã, –≥–¥–µ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä
router.get('/by-product/:productId', async (req, res) => {
    try {
        const productId = parseInt(req.params.productId);
        const result = await pool.query(`
      SELECT s.name, o.store_price, o.url
      FROM store_offers o
      JOIN stores s ON s.id = o.store_id
      WHERE o.product_id = $1
    `, [productId]);

        res.json(result.rows);
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –º–∞–≥–∞–∑–∏–Ω–æ–≤:', err);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
});

module.exports = router;
